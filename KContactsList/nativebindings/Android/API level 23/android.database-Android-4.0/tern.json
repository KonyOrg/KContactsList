{
  "android": {
    "database": {
      "ContentObserver": {
        "!url": "http://developer.android.com/reference/android/database/ContentObserver.html",
        "!type": "fn(handler: +android.os.Handler)",
        "prototype": {
          "releaseContentObserver": {
            "!type": "fn() -> IContentObserver",
            "!url": "http://developer.android.com/reference/android/database/ContentObserver.html#releaseContentObserver()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "deliverSelfNotifications": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/ContentObserver.html#deliverSelfNotifications()"
          },
          "onChange": {
            "!type": "fn(selfChange: bool) -> void",
            "!url": "http://developer.android.com/reference/android/database/ContentObserver.html#onChange(boolean)"
          },
          "dispatchChange": {
            "!type": "fn(selfChange: bool) -> void",
            "!url": "http://developer.android.com/reference/android/database/ContentObserver.html#dispatchChange(boolean)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentObserver": {
            "!type": "fn() -> IContentObserver",
            "!url": "http://developer.android.com/reference/android/database/ContentObserver.html#getContentObserver()"
          }
        }
      },
      "DatabaseErrorHandlerTest": {
        "!url": "http://developer.android.com/reference/android/database/DatabaseErrorHandlerTest.html",
        "!type": "fn()",
        "MyDatabaseCorruptionHandler": {
          "!url": "http://developer.android.com/reference/android/database/DatabaseErrorHandlerTest.MyDatabaseCorruptionHandler.html",
          "!type": "fn()",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "onCorruption": {
              "!type": "fn(dbObj: +android.database.sqlite.SQLiteDatabase) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabaseErrorHandlerTest.MyDatabaseCorruptionHandler.html#onCorruption(android.database.sqlite.SQLiteDatabase)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testDatabaseIsCorrupt": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseErrorHandlerTest.html#testDatabaseIsCorrupt()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "testNoCorruptionCase": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseErrorHandlerTest.html#testNoCorruptionCase()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "NewDatabasePerformanceTestSuite": {
        "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTestSuite.html",
        "!type": "fn()",
        "suite": {
          "!type": "fn() -> TestSuite",
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTestSuite.html#suite()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "StaleDataException": {
        "!url": "http://developer.android.com/reference/android/database/StaleDataException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "DatabasePerformanceTests": {
        "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.html",
        "!type": "fn()",
        "PerformanceBase": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "ContactReadingTest1": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.ContactReadingTest1.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.ContactReadingTest1.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.ContactReadingTest1.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.ContactReadingTest1.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.ContactReadingTest1.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.ContactReadingTest1.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf1Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf1Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf1Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf1Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf2Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf2Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf2Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf2Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf3Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf3Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf3Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf3Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf4Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf4Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf4Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf4Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf5Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf5Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf5Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf5Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf6Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf6Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf6Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf6Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf7Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf7Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf7Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf7Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf8Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf8Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf8Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf8Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf9Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf9Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf9Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf9Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf10Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf10Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf10Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf10Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf11Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf11Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf11Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf11Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf12Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf12Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf12Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf12Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf13Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf13Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf13Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf13Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf14Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf14Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf14Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf14Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf15Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf15Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf15Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf15Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf16Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf16Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf16Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf16Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf17Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf17Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf17Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf17Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf18Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf18Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf18Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf18Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf19Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf19Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf19Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf19Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf20Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf20Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf20Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf20Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf21Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf21Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf21Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf21Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf22Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf22Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf22Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf22Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf23Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf23Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf23Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf23Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf24Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf24Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf24Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf24Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf25Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf25Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf25Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf25Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf26Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf26Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf26Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf26Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf27Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf27Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf27Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf27Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf28Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf28Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf28Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf28Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf29Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf29Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf29Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf29Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf30Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf30Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf30Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf30Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Perf31Test": {
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf31Test.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "run": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf31Test.html#run()"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn(c: +android.content.Context) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.Perf31Test.html#setUp(android.content.Context)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "ONES": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.html#ONES"
        },
        "TENS": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.html#TENS"
        },
        "children": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/database/DatabasePerformanceTests.html#children()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "MergeCursor": {
        "!url": "http://developer.android.com/reference/android/database/MergeCursor.html",
        "!type": "fn(cursors: +java.newArray)",
        "prototype": {
          "deactivate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#deactivate()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "respond": {
            "!type": "fn(extras: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#respond(android.os.Bundle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "copyStringToBuffer": {
            "!type": "fn(columnIndex: number, buffer: +android.database.CharArrayBuffer) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#copyStringToBuffer(int, android.database.CharArrayBuffer)"
          },
          "getDouble": {
            "!type": "fn(column: number) -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#getDouble(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setNotificationUri": {
            "!type": "fn(cr: +android.content.ContentResolver, notifyUri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#setNotificationUri(android.content.ContentResolver, android.net.Uri)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getColumnIndex": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndex(java.lang.String)"
          },
          "move": {
            "!type": "fn(offset: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#move(int)"
          },
          "moveToFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToFirst()"
          },
          "moveToNext": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToNext()"
          },
          "requery": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#requery()"
          },
          "getWindow": {
            "!type": "fn() -> +android.database.CursorWindow",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getWindow()"
          },
          "onMove": {
            "!type": "fn(oldPosition: number, newPosition: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#onMove(int, int)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getExtras()"
          },
          "registerDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#registerDataSetObserver(android.database.DataSetObserver)"
          },
          "getType": {
            "!type": "fn(column: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#getType(int)"
          },
          "unregisterDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#unregisterDataSetObserver(android.database.DataSetObserver)"
          },
          "getColumnName": {
            "!type": "fn(columnIndex: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnName(int)"
          },
          "getColumnCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnCount()"
          },
          "setExtras": {
            "!type": "fn(extras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#setExtras(android.os.Bundle)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getInt": {
            "!type": "fn(column: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#getInt(int)"
          },
          "isFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isFirst()"
          },
          "moveToLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToLast()"
          },
          "getPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getPosition()"
          },
          "getFloat": {
            "!type": "fn(column: number) -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#getFloat(int)"
          },
          "getColumnNames": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#getColumnNames()"
          },
          "getWantsAllOnMoveCalls": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getWantsAllOnMoveCalls()"
          },
          "getCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#getCount()"
          },
          "isClosed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isClosed()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#close()"
          },
          "registerContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#registerContentObserver(android.database.ContentObserver)"
          },
          "getColumnIndexOrThrow": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndexOrThrow(java.lang.String)"
          },
          "isNull": {
            "!type": "fn(column: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#isNull(int)"
          },
          "getString": {
            "!type": "fn(column: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#getString(int)"
          },
          "isAfterLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isAfterLast()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getShort": {
            "!type": "fn(column: number) -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#getShort(int)"
          },
          "unregisterContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#unregisterContentObserver(android.database.ContentObserver)"
          },
          "isBeforeFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isBeforeFirst()"
          },
          "fillWindow": {
            "!type": "fn(position: number, window: +android.database.CursorWindow) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#fillWindow(int, android.database.CursorWindow)"
          },
          "isLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isLast()"
          },
          "getBlob": {
            "!type": "fn(column: number) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#getBlob(int)"
          },
          "moveToPrevious": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToPrevious()"
          },
          "moveToPosition": {
            "!type": "fn(position: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToPosition(int)"
          },
          "getNotificationUri": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getNotificationUri()"
          },
          "getLong": {
            "!type": "fn(column: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/database/MergeCursor.html#getLong(int)"
          }
        }
      },
      "Observable": {
        "!url": "http://developer.android.com/reference/android/database/Observable.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterObserver": {
            "!type": "fn(observer: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/database/Observable.html#unregisterObserver(T)"
          },
          "registerObserver": {
            "!type": "fn(observer: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/database/Observable.html#registerObserver(T)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "unregisterAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/Observable.html#unregisterAll()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "CursorWindow": {
        "!url": "http://developer.android.com/reference/android/database/CursorWindow.html",
        "!type": "fn(name: string)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#CREATOR"
        },
        "newFromParcel": {
          "!type": "fn(p: +android.os.Parcel) -> +android.database.CursorWindow",
          "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#newFromParcel(android.os.Parcel)"
        },
        "prototype": {
          "getNumRows": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#getNumRows()"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#describeContents()"
          },
          "isFloat": {
            "!type": "fn(row: number, column: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#isFloat(int, int)"
          },
          "isBlob": {
            "!type": "fn(row: number, column: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#isBlob(int, int)"
          },
          "isLong": {
            "!type": "fn(row: number, column: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#isLong(int, int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#toString()"
          },
          "releaseReferenceFromContainer": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/sqlite/SQLiteClosable.html#releaseReferenceFromContainer()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "copyStringToBuffer": {
            "!type": "fn(row: number, column: number, buffer: +android.database.CharArrayBuffer) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#copyStringToBuffer(int, int, android.database.CharArrayBuffer)"
          },
          "getDouble": {
            "!type": "fn(row: number, column: number) -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#getDouble(int, int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "isString": {
            "!type": "fn(row: number, column: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#isString(int, int)"
          },
          "putBlob": {
            "!type": "fn(value: +java.newArray, row: number, column: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#putBlob(byte[], int, int)"
          },
          "putDouble": {
            "!type": "fn(value: +java.lang.Double, row: number, column: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#putDouble(double, int, int)"
          },
          "putLong": {
            "!type": "fn(value: +java.lang.Long, row: number, column: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#putLong(long, int, int)"
          },
          "setStartPosition": {
            "!type": "fn(pos: number) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#setStartPosition(int)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setNumColumns": {
            "!type": "fn(columnNum: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#setNumColumns(int)"
          },
          "getType": {
            "!type": "fn(row: number, column: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#getType(int, int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getInt": {
            "!type": "fn(row: number, column: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#getInt(int, int)"
          },
          "freeLastRow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#freeLastRow()"
          },
          "getFloat": {
            "!type": "fn(row: number, column: number) -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#getFloat(int, int)"
          },
          "writeToParcel": {
            "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#writeToParcel(android.os.Parcel, int)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#clear()"
          },
          "getStartPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#getStartPosition()"
          },
          "releaseReference": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/sqlite/SQLiteClosable.html#releaseReference()"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#getName()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/sqlite/SQLiteClosable.html#close()"
          },
          "isNull": {
            "!type": "fn(row: number, column: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#isNull(int, int)"
          },
          "getString": {
            "!type": "fn(row: number, column: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#getString(int, int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getShort": {
            "!type": "fn(row: number, column: number) -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#getShort(int, int)"
          },
          "allocRow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#allocRow()"
          },
          "putString": {
            "!type": "fn(value: string, row: number, column: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#putString(java.lang.String, int, int)"
          },
          "acquireReference": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/sqlite/SQLiteClosable.html#acquireReference()"
          },
          "getBlob": {
            "!type": "fn(row: number, column: number) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#getBlob(int, int)"
          },
          "getLong": {
            "!type": "fn(row: number, column: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#getLong(int, int)"
          },
          "putNull": {
            "!type": "fn(row: number, column: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWindow.html#putNull(int, int)"
          }
        }
      },
      "BulkCursorNative": {
        "!url": "http://developer.android.com/reference/android/database/BulkCursorNative.html",
        "!type": "fn()",
        "blockUntilThreadAvailable": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#blockUntilThreadAvailable()"
        },
        "getThreadStrictModePolicy": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getThreadStrictModePolicy()"
        },
        "setDumpDisabled": {
          "!type": "fn(msg: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#setDumpDisabled(java.lang.String)"
        },
        "clearCallingIdentity": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#clearCallingIdentity()"
        },
        "flushPendingCommands": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#flushPendingCommands()"
        },
        "setThreadStrictModePolicy": {
          "!type": "fn(policyMask: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#setThreadStrictModePolicy(int)"
        },
        "asInterface": {
          "!type": "fn(obj: +android.os.IBinder) -> +android.database.IBulkCursor",
          "!url": "http://developer.android.com/reference/android/database/BulkCursorNative.html#asInterface(android.os.IBinder)"
        },
        "getCallingUserHandle": {
          "!type": "fn() -> +android.os.UserHandle",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingUserHandle()"
        },
        "getCallingPid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingPid()"
        },
        "isProxy": {
          "!type": "fn(iface: +android.os.IInterface) -> bool",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#isProxy(android.os.IInterface)"
        },
        "joinThreadPool": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#joinThreadPool()"
        },
        "getCallingUid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingUid()"
        },
        "restoreCallingIdentity": {
          "!type": "fn(token: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#restoreCallingIdentity(long)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "linkToDeath": {
            "!type": "fn(recipient: +android.os.IBinder.DeathRecipient, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#linkToDeath(android.os.IBinder.DeathRecipient, int)"
          },
          "dumpAsync": {
            "!type": "fn(fd: +java.io.FileDescriptor, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#dumpAsync(java.io.FileDescriptor, java.lang.String[])"
          },
          "dump": {
            "!type": "fn(fd: +java.io.FileDescriptor, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#dump(java.io.FileDescriptor, java.lang.String[])"
          },
          "attachInterface": {
            "!type": "fn(owner: +android.os.IInterface, descriptor: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#attachInterface(android.os.IInterface, java.lang.String)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isBinderAlive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#isBinderAlive()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onTransact": {
            "!type": "fn(code: number, data: +android.os.Parcel, reply: +android.os.Parcel, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorNative.html#onTransact(int, android.os.Parcel, android.os.Parcel, int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "unlinkToDeath": {
            "!type": "fn(recipient: +android.os.IBinder.DeathRecipient, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#unlinkToDeath(android.os.IBinder.DeathRecipient, int)"
          },
          "transact": {
            "!type": "fn(code: number, data: +android.os.Parcel, reply: +android.os.Parcel, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#transact(int, android.os.Parcel, android.os.Parcel, int)"
          },
          "asBinder": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorNative.html#asBinder()"
          },
          "getInterfaceDescriptor": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#getInterfaceDescriptor()"
          },
          "pingBinder": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#pingBinder()"
          },
          "queryLocalInterface": {
            "!type": "fn(descriptor: string) -> +android.os.IInterface",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#queryLocalInterface(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "ContentObservable": {
        "!url": "http://developer.android.com/reference/android/database/ContentObservable.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterObserver": {
            "!type": "fn(observer: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/database/Observable.html#unregisterObserver(T)"
          },
          "registerObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/ContentObservable.html#registerObserver(android.database.ContentObserver)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "notifyChange": {
            "!type": "fn(selfChange: bool) -> void",
            "!url": "http://developer.android.com/reference/android/database/ContentObservable.html#notifyChange(boolean)"
          },
          "dispatchChange": {
            "!type": "fn(selfChange: bool) -> void",
            "!url": "http://developer.android.com/reference/android/database/ContentObservable.html#dispatchChange(boolean)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "unregisterAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/Observable.html#unregisterAll()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "DatabaseUtils": {
        "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html",
        "!type": "fn()",
        "InsertHelper": {
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html",
          "!type": "fn(db: +android.database.sqlite.SQLiteDatabase, tableName: string)",
          "TABLE_INFO_PRAGMA_DEFAULT_INDEX": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html#TABLE_INFO_PRAGMA_DEFAULT_INDEX"
          },
          "TABLE_INFO_PRAGMA_COLUMNNAME_INDEX": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html#TABLE_INFO_PRAGMA_COLUMNNAME_INDEX"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "replace": {
              "!type": "fn(values: +android.content.ContentValues) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html#replace(android.content.ContentValues)"
            },
            "bindNull": {
              "!type": "fn(index: number) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html#bindNull(int)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "prepareForInsert": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html#prepareForInsert()"
            },
            "bind": {
              "!type": "fn(index: number, value: +java.lang.Double) -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html#bind(int, double)"
            },
            "getColumnIndex": {
              "!type": "fn(key: string) -> number",
              "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html#getColumnIndex(java.lang.String)"
            },
            "execute": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html#execute()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "prepareForReplace": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html#prepareForReplace()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "insert": {
              "!type": "fn(values: +android.content.ContentValues) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html#insert(android.content.ContentValues)"
            },
            "close": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html#close()"
            }
          }
        },
        "STATEMENT_PRAGMA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#STATEMENT_PRAGMA"
        },
        "STATEMENT_UPDATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#STATEMENT_UPDATE"
        },
        "STATEMENT_COMMIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#STATEMENT_COMMIT"
        },
        "STATEMENT_BEGIN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#STATEMENT_BEGIN"
        },
        "STATEMENT_ATTACH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#STATEMENT_ATTACH"
        },
        "STATEMENT_DDL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#STATEMENT_DDL"
        },
        "STATEMENT_ABORT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#STATEMENT_ABORT"
        },
        "STATEMENT_UNPREPARED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#STATEMENT_UNPREPARED"
        },
        "STATEMENT_SELECT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#STATEMENT_SELECT"
        },
        "STATEMENT_OTHER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#STATEMENT_OTHER"
        },
        "getTypeOfObject": {
          "!type": "fn(obj: +java.lang.Object) -> number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#getTypeOfObject(java.lang.Object)"
        },
        "dumpCursor": {
          "!type": "fn(cursor: +android.database.Cursor) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#dumpCursor(android.database.Cursor)"
        },
        "appendValueToSql": {
          "!type": "fn(sql: +java.lang.StringBuilder, value: +java.lang.Object) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#appendValueToSql(java.lang.StringBuilder, java.lang.Object)"
        },
        "cursorStringToInsertHelper": {
          "!type": "fn(cursor: +android.database.Cursor, field: string, inserter: +android.database.DatabaseUtils.InsertHelper, index: number) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorStringToInsertHelper(android.database.Cursor, java.lang.String, android.database.DatabaseUtils.InsertHelper, int)"
        },
        "createDbFromSqlStatements": {
          "!type": "fn(context: +android.content.Context, dbName: string, dbVersion: number, sqlStatements: string) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#createDbFromSqlStatements(android.content.Context, java.lang.String, int, java.lang.String)"
        },
        "dumpCurrentRow": {
          "!type": "fn(cursor: +android.database.Cursor) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#dumpCurrentRow(android.database.Cursor)"
        },
        "queryIsEmpty": {
          "!type": "fn(db: +android.database.sqlite.SQLiteDatabase, table: string) -> bool",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#queryIsEmpty(android.database.sqlite.SQLiteDatabase, java.lang.String)"
        },
        "cursorRowToContentValues": {
          "!type": "fn(cursor: +android.database.Cursor, values: +android.content.ContentValues) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorRowToContentValues(android.database.Cursor, android.content.ContentValues)"
        },
        "cursorDoubleToContentValuesIfPresent": {
          "!type": "fn(cursor: +android.database.Cursor, values: +android.content.ContentValues, column: string) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorDoubleToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)"
        },
        "cursorFillWindow": {
          "!type": "fn(cursor: +android.database.Cursor, position: number, window: +android.database.CursorWindow) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorFillWindow(android.database.Cursor, int, android.database.CursorWindow)"
        },
        "concatenateWhere": {
          "!type": "fn(a: string, b: string) -> string",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#concatenateWhere(java.lang.String, java.lang.String)"
        },
        "cursorDoubleToContentValues": {
          "!type": "fn(cursor: +android.database.Cursor, field: string, values: +android.content.ContentValues, key: string) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorDoubleToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues, java.lang.String)"
        },
        "readExceptionWithOperationApplicationExceptionFromParcel": {
          "!type": "fn(reply: +android.os.Parcel) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)"
        },
        "writeExceptionToParcel": {
          "!type": "fn(reply: +android.os.Parcel, e: +java.lang.Exception) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#writeExceptionToParcel(android.os.Parcel, java.lang.Exception)"
        },
        "stringForQuery": {
          "!type": "fn(db: +android.database.sqlite.SQLiteDatabase, query: string, selectionArgs: +java.newArray) -> string",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#stringForQuery(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[])"
        },
        "appendEscapedSQLString": {
          "!type": "fn(sb: +java.lang.StringBuilder, sqlString: string) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#appendEscapedSQLString(java.lang.StringBuilder, java.lang.String)"
        },
        "sqlEscapeString": {
          "!type": "fn(value: string) -> string",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#sqlEscapeString(java.lang.String)"
        },
        "cursorShortToContentValuesIfPresent": {
          "!type": "fn(cursor: +android.database.Cursor, values: +android.content.ContentValues, column: string) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorShortToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)"
        },
        "readExceptionWithFileNotFoundExceptionFromParcel": {
          "!type": "fn(reply: +android.os.Parcel) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)"
        },
        "getSqlStatementType": {
          "!type": "fn(sql: string) -> number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#getSqlStatementType(java.lang.String)"
        },
        "bindObjectToProgram": {
          "!type": "fn(prog: +android.database.sqlite.SQLiteProgram, index: number, value: +java.lang.Object) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#bindObjectToProgram(android.database.sqlite.SQLiteProgram, int, java.lang.Object)"
        },
        "cursorStringToContentValuesIfPresent": {
          "!type": "fn(cursor: +android.database.Cursor, values: +android.content.ContentValues, column: string) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorStringToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)"
        },
        "dumpCurrentRowToString": {
          "!type": "fn(cursor: +android.database.Cursor) -> string",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#dumpCurrentRowToString(android.database.Cursor)"
        },
        "cursorIntToContentValues": {
          "!type": "fn(cursor: +android.database.Cursor, field: string, values: +android.content.ContentValues) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorIntToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues)"
        },
        "appendSelectionArgs": {
          "!type": "fn(originalValues: +java.newArray, newValues: +java.newArray) -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#appendSelectionArgs(java.lang.String[], java.lang.String[])"
        },
        "cursorDoubleToCursorValues": {
          "!type": "fn(cursor: +android.database.Cursor, field: string, values: +android.content.ContentValues) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorDoubleToCursorValues(android.database.Cursor, java.lang.String, android.content.ContentValues)"
        },
        "longForQuery": {
          "!type": "fn(db: +android.database.sqlite.SQLiteDatabase, query: string, selectionArgs: +java.newArray) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#longForQuery(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[])"
        },
        "findRowIdColumnIndex": {
          "!type": "fn(columnNames: +java.newArray) -> number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#findRowIdColumnIndex(java.lang.String[])"
        },
        "blobFileDescriptorForQuery": {
          "!type": "fn(db: +android.database.sqlite.SQLiteDatabase, query: string, selectionArgs: +java.newArray) -> +android.os.ParcelFileDescriptor",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#blobFileDescriptorForQuery(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[])"
        },
        "cursorPickFillWindowStartPosition": {
          "!type": "fn(cursorPosition: number, cursorWindowCapacity: number) -> number",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorPickFillWindowStartPosition(int, int)"
        },
        "cursorLongToContentValues": {
          "!type": "fn(cursor: +android.database.Cursor, field: string, values: +android.content.ContentValues) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorLongToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues)"
        },
        "queryNumEntries": {
          "!type": "fn(db: +android.database.sqlite.SQLiteDatabase, table: string) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#queryNumEntries(android.database.sqlite.SQLiteDatabase, java.lang.String)"
        },
        "readExceptionFromParcel": {
          "!type": "fn(reply: +android.os.Parcel) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#readExceptionFromParcel(android.os.Parcel)"
        },
        "cursorFloatToContentValuesIfPresent": {
          "!type": "fn(cursor: +android.database.Cursor, values: +android.content.ContentValues, column: string) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorFloatToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)"
        },
        "cursorLongToContentValuesIfPresent": {
          "!type": "fn(cursor: +android.database.Cursor, values: +android.content.ContentValues, column: string) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorLongToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)"
        },
        "cursorStringToContentValues": {
          "!type": "fn(cursor: +android.database.Cursor, field: string, values: +android.content.ContentValues) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorStringToContentValues(android.database.Cursor, java.lang.String, android.content.ContentValues)"
        },
        "getCollationKey": {
          "!type": "fn(name: string) -> string",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#getCollationKey(java.lang.String)"
        },
        "cursorIntToContentValuesIfPresent": {
          "!type": "fn(cursor: +android.database.Cursor, values: +android.content.ContentValues, column: string) -> void",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#cursorIntToContentValuesIfPresent(android.database.Cursor, android.content.ContentValues, java.lang.String)"
        },
        "getHexCollationKey": {
          "!type": "fn(name: string) -> string",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#getHexCollationKey(java.lang.String)"
        },
        "dumpCursorToString": {
          "!type": "fn(cursor: +android.database.Cursor) -> string",
          "!url": "http://developer.android.com/reference/android/database/DatabaseUtils.html#dumpCursorToString(android.database.Cursor)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "CursorWrapper": {
        "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html",
        "!type": "fn(cursor: +android.database.Cursor)",
        "prototype": {
          "deactivate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#deactivate()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "respond": {
            "!type": "fn(extras: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#respond(android.os.Bundle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "copyStringToBuffer": {
            "!type": "fn(columnIndex: number, buffer: +android.database.CharArrayBuffer) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#copyStringToBuffer(int, android.database.CharArrayBuffer)"
          },
          "getDouble": {
            "!type": "fn(columnIndex: number) -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getDouble(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setNotificationUri": {
            "!type": "fn(cr: +android.content.ContentResolver, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#setNotificationUri(android.content.ContentResolver, android.net.Uri)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "move": {
            "!type": "fn(offset: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#move(int)"
          },
          "moveToFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#moveToFirst()"
          },
          "getColumnIndex": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getColumnIndex(java.lang.String)"
          },
          "moveToNext": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#moveToNext()"
          },
          "requery": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#requery()"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getExtras()"
          },
          "registerDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#registerDataSetObserver(android.database.DataSetObserver)"
          },
          "getType": {
            "!type": "fn(columnIndex: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getType(int)"
          },
          "unregisterDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#unregisterDataSetObserver(android.database.DataSetObserver)"
          },
          "getColumnCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getColumnCount()"
          },
          "getColumnName": {
            "!type": "fn(columnIndex: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getColumnName(int)"
          },
          "setExtras": {
            "!type": "fn(extras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#setExtras(android.os.Bundle)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getInt": {
            "!type": "fn(columnIndex: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getInt(int)"
          },
          "isFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#isFirst()"
          },
          "moveToLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#moveToLast()"
          },
          "getPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getPosition()"
          },
          "getFloat": {
            "!type": "fn(columnIndex: number) -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getFloat(int)"
          },
          "getColumnNames": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getColumnNames()"
          },
          "getWantsAllOnMoveCalls": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getWantsAllOnMoveCalls()"
          },
          "getCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getCount()"
          },
          "isClosed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#isClosed()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#close()"
          },
          "registerContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#registerContentObserver(android.database.ContentObserver)"
          },
          "isNull": {
            "!type": "fn(columnIndex: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#isNull(int)"
          },
          "getColumnIndexOrThrow": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getColumnIndexOrThrow(java.lang.String)"
          },
          "getString": {
            "!type": "fn(columnIndex: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getString(int)"
          },
          "isAfterLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#isAfterLast()"
          },
          "getWrappedCursor": {
            "!type": "fn() -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getWrappedCursor()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getShort": {
            "!type": "fn(columnIndex: number) -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getShort(int)"
          },
          "unregisterContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#unregisterContentObserver(android.database.ContentObserver)"
          },
          "isBeforeFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#isBeforeFirst()"
          },
          "isLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#isLast()"
          },
          "getBlob": {
            "!type": "fn(columnIndex: number) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getBlob(int)"
          },
          "moveToPrevious": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#moveToPrevious()"
          },
          "moveToPosition": {
            "!type": "fn(position: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#moveToPosition(int)"
          },
          "getNotificationUri": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getNotificationUri()"
          },
          "getLong": {
            "!type": "fn(columnIndex: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getLong(int)"
          }
        }
      },
      "CursorIndexOutOfBoundsException": {
        "!url": "http://developer.android.com/reference/android/database/CursorIndexOutOfBoundsException.html",
        "!type": "fn(index: number, size: number)",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "AbstractWindowedCursor": {
        "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html",
        "!type": "fn()",
        "prototype": {
          "isFloat": {
            "!type": "fn(columnIndex: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#isFloat(int)"
          },
          "isBlob": {
            "!type": "fn(columnIndex: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#isBlob(int)"
          },
          "deactivate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#deactivate()"
          },
          "isLong": {
            "!type": "fn(columnIndex: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#isLong(int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "respond": {
            "!type": "fn(extras: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#respond(android.os.Bundle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "copyStringToBuffer": {
            "!type": "fn(columnIndex: number, buffer: +android.database.CharArrayBuffer) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#copyStringToBuffer(int, android.database.CharArrayBuffer)"
          },
          "getDouble": {
            "!type": "fn(columnIndex: number) -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getDouble(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setNotificationUri": {
            "!type": "fn(cr: +android.content.ContentResolver, notifyUri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#setNotificationUri(android.content.ContentResolver, android.net.Uri)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "isString": {
            "!type": "fn(columnIndex: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#isString(int)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getColumnIndex": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndex(java.lang.String)"
          },
          "move": {
            "!type": "fn(offset: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#move(int)"
          },
          "moveToFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToFirst()"
          },
          "moveToNext": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToNext()"
          },
          "requery": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#requery()"
          },
          "getWindow": {
            "!type": "fn() -> +android.database.CursorWindow",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getWindow()"
          },
          "onMove": {
            "!type": "fn(oldPosition: number, newPosition: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#onMove(int, int)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getExtras()"
          },
          "registerDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#registerDataSetObserver(android.database.DataSetObserver)"
          },
          "hasWindow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#hasWindow()"
          },
          "setWindow": {
            "!type": "fn(window: +android.database.CursorWindow) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#setWindow(android.database.CursorWindow)"
          },
          "getType": {
            "!type": "fn(columnIndex: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getType(int)"
          },
          "unregisterDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#unregisterDataSetObserver(android.database.DataSetObserver)"
          },
          "getColumnName": {
            "!type": "fn(columnIndex: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnName(int)"
          },
          "getColumnCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnCount()"
          },
          "setExtras": {
            "!type": "fn(extras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#setExtras(android.os.Bundle)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getInt": {
            "!type": "fn(columnIndex: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getInt(int)"
          },
          "isFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isFirst()"
          },
          "moveToLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToLast()"
          },
          "getPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getPosition()"
          },
          "getFloat": {
            "!type": "fn(columnIndex: number) -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getFloat(int)"
          },
          "getColumnNames": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnNames()"
          },
          "getWantsAllOnMoveCalls": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getWantsAllOnMoveCalls()"
          },
          "getCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getCount()"
          },
          "isClosed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isClosed()"
          },
          "registerContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#registerContentObserver(android.database.ContentObserver)"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#close()"
          },
          "getColumnIndexOrThrow": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndexOrThrow(java.lang.String)"
          },
          "isNull": {
            "!type": "fn(columnIndex: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#isNull(int)"
          },
          "getString": {
            "!type": "fn(columnIndex: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getString(int)"
          },
          "isAfterLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isAfterLast()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getShort": {
            "!type": "fn(columnIndex: number) -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getShort(int)"
          },
          "unregisterContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#unregisterContentObserver(android.database.ContentObserver)"
          },
          "isBeforeFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isBeforeFirst()"
          },
          "fillWindow": {
            "!type": "fn(position: number, window: +android.database.CursorWindow) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#fillWindow(int, android.database.CursorWindow)"
          },
          "isLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isLast()"
          },
          "getBlob": {
            "!type": "fn(columnIndex: number) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getBlob(int)"
          },
          "moveToPrevious": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToPrevious()"
          },
          "moveToPosition": {
            "!type": "fn(position: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToPosition(int)"
          },
          "getNotificationUri": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getNotificationUri()"
          },
          "getLong": {
            "!type": "fn(columnIndex: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getLong(int)"
          }
        }
      },
      "DatabaseStressTest": {
        "!url": "http://developer.android.com/reference/android/database/DatabaseStressTest.html",
        "!type": "fn()",
        "prototype": {
          "testOutOfSpace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseStressTest.html#testOutOfSpace()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testSingleThreadInsertDelete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseStressTest.html#testSingleThreadInsertDelete()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "AbstractCursor": {
        "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html",
        "!type": "fn()",
        "prototype": {
          "deactivate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#deactivate()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "respond": {
            "!type": "fn(extras: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#respond(android.os.Bundle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "copyStringToBuffer": {
            "!type": "fn(columnIndex: number, buffer: +android.database.CharArrayBuffer) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#copyStringToBuffer(int, android.database.CharArrayBuffer)"
          },
          "getDouble": {
            "!type": "fn(column: number) -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getDouble(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setNotificationUri": {
            "!type": "fn(cr: +android.content.ContentResolver, notifyUri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#setNotificationUri(android.content.ContentResolver, android.net.Uri)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "move": {
            "!type": "fn(offset: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#move(int)"
          },
          "moveToFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToFirst()"
          },
          "getColumnIndex": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndex(java.lang.String)"
          },
          "moveToNext": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToNext()"
          },
          "requery": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#requery()"
          },
          "getWindow": {
            "!type": "fn() -> +android.database.CursorWindow",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getWindow()"
          },
          "onMove": {
            "!type": "fn(oldPosition: number, newPosition: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#onMove(int, int)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getExtras()"
          },
          "registerDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#registerDataSetObserver(android.database.DataSetObserver)"
          },
          "getType": {
            "!type": "fn(column: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getType(int)"
          },
          "unregisterDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#unregisterDataSetObserver(android.database.DataSetObserver)"
          },
          "getColumnCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnCount()"
          },
          "getColumnName": {
            "!type": "fn(columnIndex: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnName(int)"
          },
          "setExtras": {
            "!type": "fn(extras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#setExtras(android.os.Bundle)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getInt": {
            "!type": "fn(column: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getInt(int)"
          },
          "isFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isFirst()"
          },
          "moveToLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToLast()"
          },
          "getPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getPosition()"
          },
          "getFloat": {
            "!type": "fn(column: number) -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getFloat(int)"
          },
          "getColumnNames": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnNames()"
          },
          "getWantsAllOnMoveCalls": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getWantsAllOnMoveCalls()"
          },
          "getCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getCount()"
          },
          "isClosed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isClosed()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#close()"
          },
          "registerContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#registerContentObserver(android.database.ContentObserver)"
          },
          "isNull": {
            "!type": "fn(column: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isNull(int)"
          },
          "getColumnIndexOrThrow": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndexOrThrow(java.lang.String)"
          },
          "getString": {
            "!type": "fn(column: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getString(int)"
          },
          "isAfterLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isAfterLast()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getShort": {
            "!type": "fn(column: number) -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getShort(int)"
          },
          "unregisterContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#unregisterContentObserver(android.database.ContentObserver)"
          },
          "isBeforeFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isBeforeFirst()"
          },
          "fillWindow": {
            "!type": "fn(position: number, window: +android.database.CursorWindow) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#fillWindow(int, android.database.CursorWindow)"
          },
          "isLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isLast()"
          },
          "getBlob": {
            "!type": "fn(column: number) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getBlob(int)"
          },
          "moveToPrevious": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToPrevious()"
          },
          "moveToPosition": {
            "!type": "fn(position: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToPosition(int)"
          },
          "getNotificationUri": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getNotificationUri()"
          },
          "getLong": {
            "!type": "fn(column: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getLong(int)"
          }
        }
      },
      "DatabaseLockTest": {
        "!url": "http://developer.android.com/reference/android/database/DatabaseLockTest.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "testLockFairness": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseLockTest.html#testLockFairness()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testLockLatency": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseLockTest.html#testLockLatency()"
          }
        }
      },
      "SQLException": {
        "!url": "http://developer.android.com/reference/android/database/SQLException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "DatabaseStatementTest": {
        "!url": "http://developer.android.com/reference/android/database/DatabaseStatementTest.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "testSimpleStringBinding": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseStatementTest.html#testSimpleStringBinding()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "testExecuteStatement": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseStatementTest.html#testExecuteStatement()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testStatementStringBinding": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseStatementTest.html#testStatementStringBinding()"
          },
          "testStatementMultiThreaded": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseStatementTest.html#testStatementMultiThreaded()"
          },
          "testSimpleQuery": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseStatementTest.html#testSimpleQuery()"
          },
          "testStatementMultipleBindings": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseStatementTest.html#testStatementMultipleBindings()"
          },
          "testStatementConstraint": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseStatementTest.html#testStatementConstraint()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "startPerformance": {
            "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
            "!url": "http://developer.android.com/reference/android/database/DatabaseStatementTest.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "testStatementClearBindings": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseStatementTest.html#testStatementClearBindings()"
          },
          "isPerformanceOnly": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/DatabaseStatementTest.html#isPerformanceOnly()"
          },
          "testStatementLongBinding": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseStatementTest.html#testStatementLongBinding()"
          }
        }
      },
      "MatrixCursor": {
        "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html",
        "!type": "fn(columnNames: +java.newArray, initialCapacity: number)",
        "RowBuilder": {
          "!url": "http://developer.android.com/reference/android/database/MatrixCursor.RowBuilder.html",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "add": {
              "!type": "fn(columnValue: +java.lang.Object) -> +android.database.MatrixCursor.RowBuilder",
              "!url": "http://developer.android.com/reference/android/database/MatrixCursor.RowBuilder.html#add(java.lang.Object)"
            }
          }
        },
        "prototype": {
          "newRow": {
            "!type": "fn() -> +android.database.MatrixCursor.RowBuilder",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html#newRow()"
          },
          "deactivate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#deactivate()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "respond": {
            "!type": "fn(extras: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#respond(android.os.Bundle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "copyStringToBuffer": {
            "!type": "fn(columnIndex: number, buffer: +android.database.CharArrayBuffer) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#copyStringToBuffer(int, android.database.CharArrayBuffer)"
          },
          "getDouble": {
            "!type": "fn(column: number) -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html#getDouble(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setNotificationUri": {
            "!type": "fn(cr: +android.content.ContentResolver, notifyUri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#setNotificationUri(android.content.ContentResolver, android.net.Uri)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "move": {
            "!type": "fn(offset: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#move(int)"
          },
          "moveToFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToFirst()"
          },
          "getColumnIndex": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndex(java.lang.String)"
          },
          "moveToNext": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToNext()"
          },
          "requery": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#requery()"
          },
          "getWindow": {
            "!type": "fn() -> +android.database.CursorWindow",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getWindow()"
          },
          "onMove": {
            "!type": "fn(oldPosition: number, newPosition: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#onMove(int, int)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getExtras()"
          },
          "registerDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#registerDataSetObserver(android.database.DataSetObserver)"
          },
          "getType": {
            "!type": "fn(column: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html#getType(int)"
          },
          "unregisterDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#unregisterDataSetObserver(android.database.DataSetObserver)"
          },
          "getColumnName": {
            "!type": "fn(columnIndex: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnName(int)"
          },
          "getColumnCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnCount()"
          },
          "setExtras": {
            "!type": "fn(extras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#setExtras(android.os.Bundle)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getInt": {
            "!type": "fn(column: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html#getInt(int)"
          },
          "isFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isFirst()"
          },
          "moveToLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToLast()"
          },
          "getPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getPosition()"
          },
          "getFloat": {
            "!type": "fn(column: number) -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html#getFloat(int)"
          },
          "getColumnNames": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html#getColumnNames()"
          },
          "getWantsAllOnMoveCalls": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getWantsAllOnMoveCalls()"
          },
          "getCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html#getCount()"
          },
          "isClosed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isClosed()"
          },
          "addRow": {
            "!type": "fn(columnValues: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html#addRow(java.lang.Object[])"
          },
          "registerContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#registerContentObserver(android.database.ContentObserver)"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#close()"
          },
          "isNull": {
            "!type": "fn(column: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html#isNull(int)"
          },
          "getColumnIndexOrThrow": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndexOrThrow(java.lang.String)"
          },
          "getString": {
            "!type": "fn(column: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html#getString(int)"
          },
          "isAfterLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isAfterLast()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getShort": {
            "!type": "fn(column: number) -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html#getShort(int)"
          },
          "unregisterContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#unregisterContentObserver(android.database.ContentObserver)"
          },
          "isBeforeFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isBeforeFirst()"
          },
          "fillWindow": {
            "!type": "fn(position: number, window: +android.database.CursorWindow) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#fillWindow(int, android.database.CursorWindow)"
          },
          "isLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isLast()"
          },
          "getBlob": {
            "!type": "fn(column: number) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html#getBlob(int)"
          },
          "moveToPrevious": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToPrevious()"
          },
          "moveToPosition": {
            "!type": "fn(position: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToPosition(int)"
          },
          "getNotificationUri": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getNotificationUri()"
          },
          "getLong": {
            "!type": "fn(column: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursor.html#getLong(int)"
          }
        }
      },
      "CursorToBulkCursorAdaptor": {
        "!url": "http://developer.android.com/reference/android/database/CursorToBulkCursorAdaptor.html",
        "!type": "fn(cursor: +android.database.Cursor, observer: IContentObserver, providerName: string)",
        "blockUntilThreadAvailable": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#blockUntilThreadAvailable()"
        },
        "getThreadStrictModePolicy": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getThreadStrictModePolicy()"
        },
        "setDumpDisabled": {
          "!type": "fn(msg: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#setDumpDisabled(java.lang.String)"
        },
        "clearCallingIdentity": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#clearCallingIdentity()"
        },
        "flushPendingCommands": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#flushPendingCommands()"
        },
        "setThreadStrictModePolicy": {
          "!type": "fn(policyMask: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#setThreadStrictModePolicy(int)"
        },
        "asInterface": {
          "!type": "fn(obj: +android.os.IBinder) -> +android.database.IBulkCursor",
          "!url": "http://developer.android.com/reference/android/database/BulkCursorNative.html#asInterface(android.os.IBinder)"
        },
        "getCallingUserHandle": {
          "!type": "fn() -> +android.os.UserHandle",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingUserHandle()"
        },
        "getCallingPid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingPid()"
        },
        "isProxy": {
          "!type": "fn(iface: +android.os.IInterface) -> bool",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#isProxy(android.os.IInterface)"
        },
        "joinThreadPool": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#joinThreadPool()"
        },
        "getCallingUid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingUid()"
        },
        "restoreCallingIdentity": {
          "!type": "fn(token: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#restoreCallingIdentity(long)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "deactivate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorToBulkCursorAdaptor.html#deactivate()"
          },
          "linkToDeath": {
            "!type": "fn(recipient: +android.os.IBinder.DeathRecipient, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#linkToDeath(android.os.IBinder.DeathRecipient, int)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/CursorToBulkCursorAdaptor.html#getExtras()"
          },
          "dumpAsync": {
            "!type": "fn(fd: +java.io.FileDescriptor, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#dumpAsync(java.io.FileDescriptor, java.lang.String[])"
          },
          "binderDied": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorToBulkCursorAdaptor.html#binderDied()"
          },
          "getWindow": {
            "!type": "fn(position: number) -> +android.database.CursorWindow",
            "!url": "http://developer.android.com/reference/android/database/CursorToBulkCursorAdaptor.html#getWindow(int)"
          },
          "dump": {
            "!type": "fn(fd: +java.io.FileDescriptor, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#dump(java.io.FileDescriptor, java.lang.String[])"
          },
          "onMove": {
            "!type": "fn(position: number) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorToBulkCursorAdaptor.html#onMove(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "attachInterface": {
            "!type": "fn(owner: +android.os.IInterface, descriptor: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#attachInterface(android.os.IInterface, java.lang.String)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isBinderAlive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#isBinderAlive()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorToBulkCursorAdaptor.html#close()"
          },
          "getBulkCursorDescriptor": {
            "!type": "fn() -> +android.database.BulkCursorDescriptor",
            "!url": "http://developer.android.com/reference/android/database/CursorToBulkCursorAdaptor.html#getBulkCursorDescriptor()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onTransact": {
            "!type": "fn(code: number, data: +android.os.Parcel, reply: +android.os.Parcel, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorNative.html#onTransact(int, android.os.Parcel, android.os.Parcel, int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "requery": {
            "!type": "fn(observer: IContentObserver) -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorToBulkCursorAdaptor.html#requery(IContentObserver)"
          },
          "unlinkToDeath": {
            "!type": "fn(recipient: +android.os.IBinder.DeathRecipient, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#unlinkToDeath(android.os.IBinder.DeathRecipient, int)"
          },
          "transact": {
            "!type": "fn(code: number, data: +android.os.Parcel, reply: +android.os.Parcel, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#transact(int, android.os.Parcel, android.os.Parcel, int)"
          },
          "respond": {
            "!type": "fn(extras: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/CursorToBulkCursorAdaptor.html#respond(android.os.Bundle)"
          },
          "asBinder": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorNative.html#asBinder()"
          },
          "getInterfaceDescriptor": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#getInterfaceDescriptor()"
          },
          "pingBinder": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#pingBinder()"
          },
          "queryLocalInterface": {
            "!type": "fn(descriptor: string) -> +android.os.IInterface",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#queryLocalInterface(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "CursorWindowAllocationException": {
        "!url": "http://developer.android.com/reference/android/database/CursorWindowAllocationException.html",
        "!type": "fn(description: string)",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "DatabaseGeneralTest": {
        "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html",
        "!type": "fn()",
        "prototype": {
          "testCollateLocalizedForJapanese": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testCollateLocalizedForJapanese()"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "testCopyString": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testCopyString()"
          },
          "startPerformance": {
            "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
          },
          "testTableInfoPragma": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testTableInfoPragma()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "testTransactions": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testTransactions()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "testDefaultDatabaseErrorHandler": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testDefaultDatabaseErrorHandler()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testSetMaxCahesize": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testSetMaxCahesize()"
          },
          "testSemicolonsInStatements": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testSemicolonsInStatements()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "testSchemaChange3": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testSchemaChange3()"
          },
          "testSchemaChange2": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testSchemaChange2()"
          },
          "testSchemaChange1": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testSchemaChange1()"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "testTokenize": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testTokenize()"
          },
          "testUnionsWithBindArgs": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testUnionsWithBindArgs()"
          },
          "testPhoneNumbersEqualInternationl": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testPhoneNumbersEqualInternationl()"
          },
          "testVersion": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testVersion()"
          },
          "testUpdate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testUpdate()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "testSelectionArgs": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testSelectionArgs()"
          },
          "testInsertHelper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testInsertHelper()"
          },
          "testContentValues": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testContentValues()"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "xxtestMem3": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#xxtestMem3()"
          },
          "xxtestMem2": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#xxtestMem2()"
          },
          "xxtestMem1": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#xxtestMem1()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "isPerformanceOnly": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#isPerformanceOnly()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "testPhoneNumbersEqual": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseGeneralTest.html#testPhoneNumbersEqual()"
          }
        }
      },
      "DataSetObserver": {
        "!url": "http://developer.android.com/reference/android/database/DataSetObserver.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "onChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DataSetObserver.html#onChanged()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onInvalidated": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DataSetObserver.html#onInvalidated()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "DatabaseCursorTest": {
        "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html",
        "!type": "fn()",
        "prototype": {
          "testManyRowsTxtLong": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#testManyRowsTxtLong()"
          },
          "testRequery": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#testRequery()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "testRequeryWithSelection": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#testRequeryWithSelection()"
          },
          "testLargeField": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#testLargeField()"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "testManyRowsLong": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#testManyRowsLong()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "testRequeryWithAlteredSelectionArgs": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#testRequeryWithAlteredSelectionArgs()"
          },
          "testBlob": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#testBlob()"
          },
          "testCursor2": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#testCursor2()"
          },
          "testCursor1": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#testCursor1()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testManyRowsTxt": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#testManyRowsTxt()"
          },
          "testCursorWindowFailureWhenTooManyCursorWindowsLeftOpen": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#testCursorWindowFailureWhenTooManyCursorWindowsLeftOpen()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "testRequeryWithSelectionArgs": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#testRequeryWithSelectionArgs()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "testRealColumns": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#testRealColumns()"
          },
          "startPerformance": {
            "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isPerformanceOnly": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/DatabaseCursorTest.html#isPerformanceOnly()"
          }
        }
      },
      "CursorWindowTest": {
        "!url": "http://developer.android.com/reference/android/database/CursorWindowTest.html",
        "!type": "fn()",
        "prototype": {
          "isPerformanceOnly": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWindowTest.html#isPerformanceOnly()"
          },
          "testConstructorWithNullName": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWindowTest.html#testConstructorWithNullName()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "startPerformance": {
            "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWindowTest.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testConstructorWithEmptyName": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWindowTest.html#testConstructorWithEmptyName()"
          },
          "testDeprecatedConstructor": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWindowTest.html#testDeprecatedConstructor()"
          },
          "testValues": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWindowTest.html#testValues()"
          },
          "testConstructor_WithName": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWindowTest.html#testConstructor_WithName()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "CharArrayBuffer": {
        "!url": "http://developer.android.com/reference/android/database/CharArrayBuffer.html",
        "!type": "fn(size: number)",
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "BulkCursorDescriptor": {
        "!url": "http://developer.android.com/reference/android/database/BulkCursorDescriptor.html",
        "!type": "fn()",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/database/BulkCursorDescriptor.html#CREATOR"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorDescriptor.html#describeContents()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeToParcel": {
            "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorDescriptor.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "readFromParcel": {
            "!type": "fn(in: +android.os.Parcel) -> void",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorDescriptor.html#readFromParcel(android.os.Parcel)"
          }
        }
      },
      "NewDatabasePerformanceTests": {
        "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.html",
        "!type": "fn()",
        "PerformanceBase": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Insert1000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.Insert1000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.Insert1000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.Insert1000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "InsertIndexed1000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertIndexed1000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertIndexed1000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertIndexed1000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Select100": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.Select100.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.Select100.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.Select100.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectStringComparison100": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringComparison100.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringComparison100.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringComparison100.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectIndex100": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIndex100.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIndex100.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIndex100.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "InnerJoin100": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InnerJoin100.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InnerJoin100.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InnerJoin100.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "InnerJoinOneSide100": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InnerJoinOneSide100.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InnerJoinOneSide100.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InnerJoinOneSide100.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "InnerJoinNoIndex100": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InnerJoinNoIndex100.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InnerJoinNoIndex100.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InnerJoinNoIndex100.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectSubQIndex100": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectSubQIndex100.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectSubQIndex100.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectSubQIndex100.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectIndexStringComparison100": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIndexStringComparison100.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIndexStringComparison100.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIndexStringComparison100.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectInteger100": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectInteger100.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectInteger100.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectInteger100.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectString100": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectString100.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectString100.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectString100.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectIntegerIndex100": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIntegerIndex100.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIntegerIndex100.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIntegerIndex100.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectIndexString100": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIndexString100.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIndexString100.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIndexString100.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectStringStartsWith100": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringStartsWith100.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringStartsWith100.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringStartsWith100.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "DeleteIndexed1000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.DeleteIndexed1000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.DeleteIndexed1000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.DeleteIndexed1000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Delete1000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.Delete1000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.Delete1000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.Delete1000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "DeleteWhere1000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.DeleteWhere1000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.DeleteWhere1000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.DeleteWhere1000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "DeleteIndexWhere1000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.DeleteIndexWhere1000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.DeleteIndexWhere1000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.DeleteIndexWhere1000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "UpdateIndexWhere1000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.UpdateIndexWhere1000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.UpdateIndexWhere1000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.UpdateIndexWhere1000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "UpdateWhere1000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.UpdateWhere1000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.UpdateWhere1000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.UpdateWhere1000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "InsertInteger10000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertInteger10000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertInteger10000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertInteger10000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "InsertIntegerIndex10000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertIntegerIndex10000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertIntegerIndex10000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertIntegerIndex10000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "InsertString10000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertString10000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertString10000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertString10000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "InsertStringIndexed10000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertStringIndexed10000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertStringIndexed10000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.InsertStringIndexed10000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectStringStartsWith10000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringStartsWith10000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringStartsWith10000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringStartsWith10000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectStringIndexedStartsWith10000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringIndexedStartsWith10000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringIndexedStartsWith10000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringIndexedStartsWith10000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectInteger10000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectInteger10000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectInteger10000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectInteger10000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectIntegerIndexed10000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIntegerIndexed10000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIntegerIndexed10000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectIntegerIndexed10000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectStringContains10000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringContains10000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringContains10000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringContains10000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SelectStringIndexedContains10000": {
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringIndexedContains10000.html",
          "!type": "fn()",
          "prototype": {
            "isPerformanceOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#isPerformanceOnly()"
            },
            "testRun": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringIndexedContains10000.html#testRun()"
            },
            "tearDown": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#tearDown()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startPerformance": {
              "!type": "fn(intermediates: +android.test.PerformanceTestCase.Intermediates) -> number",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#startPerformance(android.test.PerformanceTestCase.Intermediates)"
            },
            "setUp": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.SelectStringIndexedContains10000.html#setUp()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numberName": {
              "!type": "fn(number: number) -> string",
              "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.PerformanceBase.html#numberName(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "ONES": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.html#ONES"
        },
        "TENS": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/database/NewDatabasePerformanceTests.html#TENS"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "DatabaseLocaleTest": {
        "!url": "http://developer.android.com/reference/android/database/DatabaseLocaleTest.html",
        "!type": "fn()",
        "prototype": {
          "testLocaleInsertOrder": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseLocaleTest.html#testLocaleInsertOrder()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "testHoge": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseLocaleTest.html#testHoge()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testLocaleenUS": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DatabaseLocaleTest.html#testLocaleenUS()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "CursorJoiner": {
        "!url": "http://developer.android.com/reference/android/database/CursorJoiner.html",
        "!type": "fn(cursorLeft: +android.database.Cursor, columnNamesLeft: +java.newArray, cursorRight: +android.database.Cursor, columnNamesRight: +java.newArray)",
        "Result": {
          "!url": "http://developer.android.com/reference/android/database/CursorJoiner.Result.html",
          "LEFT": {
            "!type": "+android.database.CursorJoiner.Result",
            "!url": "http://developer.android.com/reference/android/database/CursorJoiner.Result.html#LEFT"
          },
          "RIGHT": {
            "!type": "+android.database.CursorJoiner.Result",
            "!url": "http://developer.android.com/reference/android/database/CursorJoiner.Result.html#RIGHT"
          },
          "BOTH": {
            "!type": "+android.database.CursorJoiner.Result",
            "!url": "http://developer.android.com/reference/android/database/CursorJoiner.Result.html#BOTH"
          },
          "valueOf": {
            "!type": "fn(name: string) -> +android.database.CursorJoiner.Result",
            "!url": "http://developer.android.com/reference/android/database/CursorJoiner.Result.html#valueOf(java.lang.String)"
          },
          "values": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/CursorJoiner.Result.html#values()"
          },
          "getSharedConstants": {
            "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
          },
          "prototype": {
            "name": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
            },
            "equals": {
              "!type": "fn(other: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
            },
            "compareTo": {
              "!type": "fn(o: +java.lang.Enum) -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getDeclaringClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
            },
            "ordinal": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "prototype": {
          "hasNext": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorJoiner.html#hasNext()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "remove": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorJoiner.html#remove()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/android/database/CursorJoiner.html#iterator()"
          },
          "next": {
            "!type": "fn() -> +android.database.CursorJoiner.Result",
            "!url": "http://developer.android.com/reference/android/database/CursorJoiner.html#next()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "DataSetObservable": {
        "!url": "http://developer.android.com/reference/android/database/DataSetObservable.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "notifyChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DataSetObservable.html#notifyChanged()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterObserver": {
            "!type": "fn(observer: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/database/Observable.html#unregisterObserver(T)"
          },
          "registerObserver": {
            "!type": "fn(observer: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/database/Observable.html#registerObserver(T)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "notifyInvalidated": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/DataSetObservable.html#notifyInvalidated()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "unregisterAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/Observable.html#unregisterAll()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "MatrixCursorTest": {
        "!url": "http://developer.android.com/reference/android/database/MatrixCursorTest.html",
        "!type": "fn()",
        "prototype": {
          "testAddIterable": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursorTest.html#testAddIterable()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "testAddArray": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursorTest.html#testAddArray()"
          },
          "testNullValue": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursorTest.html#testNullValue()"
          },
          "testAddArrayList": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursorTest.html#testAddArrayList()"
          },
          "testMatrixCursor": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursorTest.html#testMatrixCursor()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testRowBuilderOffer": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursorTest.html#testRowBuilderOffer()"
          },
          "testEmptyCursor": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/MatrixCursorTest.html#testEmptyCursor()"
          }
        }
      },
      "BulkCursorToCursorAdaptor": {
        "!url": "http://developer.android.com/reference/android/database/BulkCursorToCursorAdaptor.html",
        "!type": "fn()",
        "prototype": {
          "isFloat": {
            "!type": "fn(columnIndex: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#isFloat(int)"
          },
          "isBlob": {
            "!type": "fn(columnIndex: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#isBlob(int)"
          },
          "deactivate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorToCursorAdaptor.html#deactivate()"
          },
          "isLong": {
            "!type": "fn(columnIndex: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#isLong(int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "respond": {
            "!type": "fn(extras: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorToCursorAdaptor.html#respond(android.os.Bundle)"
          },
          "initialize": {
            "!type": "fn(d: +android.database.BulkCursorDescriptor) -> void",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorToCursorAdaptor.html#initialize(android.database.BulkCursorDescriptor)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "copyStringToBuffer": {
            "!type": "fn(columnIndex: number, buffer: +android.database.CharArrayBuffer) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#copyStringToBuffer(int, android.database.CharArrayBuffer)"
          },
          "getDouble": {
            "!type": "fn(columnIndex: number) -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getDouble(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setNotificationUri": {
            "!type": "fn(cr: +android.content.ContentResolver, notifyUri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#setNotificationUri(android.content.ContentResolver, android.net.Uri)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "isString": {
            "!type": "fn(columnIndex: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#isString(int)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getColumnIndex": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndex(java.lang.String)"
          },
          "move": {
            "!type": "fn(offset: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#move(int)"
          },
          "moveToFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToFirst()"
          },
          "moveToNext": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToNext()"
          },
          "requery": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorToCursorAdaptor.html#requery()"
          },
          "getWindow": {
            "!type": "fn() -> +android.database.CursorWindow",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getWindow()"
          },
          "onMove": {
            "!type": "fn(oldPosition: number, newPosition: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorToCursorAdaptor.html#onMove(int, int)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorToCursorAdaptor.html#getExtras()"
          },
          "registerDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#registerDataSetObserver(android.database.DataSetObserver)"
          },
          "hasWindow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#hasWindow()"
          },
          "setWindow": {
            "!type": "fn(window: +android.database.CursorWindow) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#setWindow(android.database.CursorWindow)"
          },
          "getType": {
            "!type": "fn(columnIndex: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getType(int)"
          },
          "unregisterDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#unregisterDataSetObserver(android.database.DataSetObserver)"
          },
          "getObserver": {
            "!type": "fn() -> IContentObserver",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorToCursorAdaptor.html#getObserver()"
          },
          "getColumnName": {
            "!type": "fn(columnIndex: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnName(int)"
          },
          "getColumnCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnCount()"
          },
          "setExtras": {
            "!type": "fn(extras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#setExtras(android.os.Bundle)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getInt": {
            "!type": "fn(columnIndex: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getInt(int)"
          },
          "isFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isFirst()"
          },
          "moveToLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToLast()"
          },
          "getPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getPosition()"
          },
          "getFloat": {
            "!type": "fn(columnIndex: number) -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getFloat(int)"
          },
          "getColumnNames": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorToCursorAdaptor.html#getColumnNames()"
          },
          "getWantsAllOnMoveCalls": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getWantsAllOnMoveCalls()"
          },
          "getCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorToCursorAdaptor.html#getCount()"
          },
          "isClosed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isClosed()"
          },
          "registerContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#registerContentObserver(android.database.ContentObserver)"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/BulkCursorToCursorAdaptor.html#close()"
          },
          "getColumnIndexOrThrow": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getColumnIndexOrThrow(java.lang.String)"
          },
          "isNull": {
            "!type": "fn(columnIndex: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#isNull(int)"
          },
          "getString": {
            "!type": "fn(columnIndex: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getString(int)"
          },
          "isAfterLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isAfterLast()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getShort": {
            "!type": "fn(columnIndex: number) -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getShort(int)"
          },
          "unregisterContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#unregisterContentObserver(android.database.ContentObserver)"
          },
          "isBeforeFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isBeforeFirst()"
          },
          "fillWindow": {
            "!type": "fn(position: number, window: +android.database.CursorWindow) -> void",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#fillWindow(int, android.database.CursorWindow)"
          },
          "isLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#isLast()"
          },
          "getBlob": {
            "!type": "fn(columnIndex: number) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getBlob(int)"
          },
          "moveToPrevious": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToPrevious()"
          },
          "moveToPosition": {
            "!type": "fn(position: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#moveToPosition(int)"
          },
          "getNotificationUri": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/database/AbstractCursor.html#getNotificationUri()"
          },
          "getLong": {
            "!type": "fn(columnIndex: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/database/AbstractWindowedCursor.html#getLong(int)"
          }
        }
      },
      "CrossProcessCursorWrapper": {
        "!url": "http://developer.android.com/reference/android/database/CrossProcessCursorWrapper.html",
        "!type": "fn(cursor: +android.database.Cursor)",
        "prototype": {
          "deactivate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#deactivate()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "respond": {
            "!type": "fn(extras: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#respond(android.os.Bundle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "copyStringToBuffer": {
            "!type": "fn(columnIndex: number, buffer: +android.database.CharArrayBuffer) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#copyStringToBuffer(int, android.database.CharArrayBuffer)"
          },
          "getDouble": {
            "!type": "fn(columnIndex: number) -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getDouble(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setNotificationUri": {
            "!type": "fn(cr: +android.content.ContentResolver, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#setNotificationUri(android.content.ContentResolver, android.net.Uri)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "move": {
            "!type": "fn(offset: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#move(int)"
          },
          "moveToFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#moveToFirst()"
          },
          "getColumnIndex": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getColumnIndex(java.lang.String)"
          },
          "moveToNext": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#moveToNext()"
          },
          "requery": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#requery()"
          },
          "getWindow": {
            "!type": "fn() -> +android.database.CursorWindow",
            "!url": "http://developer.android.com/reference/android/database/CrossProcessCursorWrapper.html#getWindow()"
          },
          "onMove": {
            "!type": "fn(oldPosition: number, newPosition: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CrossProcessCursorWrapper.html#onMove(int, int)"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getExtras()"
          },
          "registerDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#registerDataSetObserver(android.database.DataSetObserver)"
          },
          "getType": {
            "!type": "fn(columnIndex: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getType(int)"
          },
          "unregisterDataSetObserver": {
            "!type": "fn(observer: +android.database.DataSetObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#unregisterDataSetObserver(android.database.DataSetObserver)"
          },
          "getColumnCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getColumnCount()"
          },
          "getColumnName": {
            "!type": "fn(columnIndex: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getColumnName(int)"
          },
          "setExtras": {
            "!type": "fn(extras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#setExtras(android.os.Bundle)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getInt": {
            "!type": "fn(columnIndex: number) -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getInt(int)"
          },
          "isFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#isFirst()"
          },
          "moveToLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#moveToLast()"
          },
          "getPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getPosition()"
          },
          "getFloat": {
            "!type": "fn(columnIndex: number) -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getFloat(int)"
          },
          "getColumnNames": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getColumnNames()"
          },
          "getWantsAllOnMoveCalls": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getWantsAllOnMoveCalls()"
          },
          "getCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getCount()"
          },
          "isClosed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#isClosed()"
          },
          "registerContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#registerContentObserver(android.database.ContentObserver)"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#close()"
          },
          "isNull": {
            "!type": "fn(columnIndex: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#isNull(int)"
          },
          "getColumnIndexOrThrow": {
            "!type": "fn(columnName: string) -> number",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getColumnIndexOrThrow(java.lang.String)"
          },
          "getString": {
            "!type": "fn(columnIndex: number) -> string",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getString(int)"
          },
          "isAfterLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#isAfterLast()"
          },
          "getWrappedCursor": {
            "!type": "fn() -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getWrappedCursor()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getShort": {
            "!type": "fn(columnIndex: number) -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getShort(int)"
          },
          "unregisterContentObserver": {
            "!type": "fn(observer: +android.database.ContentObserver) -> void",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#unregisterContentObserver(android.database.ContentObserver)"
          },
          "isBeforeFirst": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#isBeforeFirst()"
          },
          "fillWindow": {
            "!type": "fn(position: number, window: +android.database.CursorWindow) -> void",
            "!url": "http://developer.android.com/reference/android/database/CrossProcessCursorWrapper.html#fillWindow(int, android.database.CursorWindow)"
          },
          "isLast": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#isLast()"
          },
          "getBlob": {
            "!type": "fn(columnIndex: number) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getBlob(int)"
          },
          "moveToPrevious": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#moveToPrevious()"
          },
          "moveToPosition": {
            "!type": "fn(position: number) -> bool",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#moveToPosition(int)"
          },
          "getNotificationUri": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getNotificationUri()"
          },
          "getLong": {
            "!type": "fn(columnIndex: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/database/CursorWrapper.html#getLong(int)"
          }
        }
      },
      "DefaultDatabaseErrorHandler": {
        "!url": "http://developer.android.com/reference/android/database/DefaultDatabaseErrorHandler.html",
        "!type": "fn()",
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onCorruption": {
            "!type": "fn(dbObj: +android.database.sqlite.SQLiteDatabase) -> void",
            "!url": "http://developer.android.com/reference/android/database/DefaultDatabaseErrorHandler.html#onCorruption(android.database.sqlite.SQLiteDatabase)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      }
    }
  }
}